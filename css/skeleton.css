/*
  I always wanted to build my own css responsive grid framework, so I'll try to do it in that project.
  I took some inspiration about the basic need on an alsacreation article : Bonnes pratiques en CSS : BEM et OOCSS.
  Link here : http://www.alsacreations.com/article/lire/1641-bonnes-pratiques-en-css-bem-et-oocss.html

  I'll build the framework following the different steps:
  1/ Variables definition
  2/ Building the grid system
  3/ Designing elements (I'll use Photoshop or Dreamweaver don't know yet)
  4/ Make it responsive
  5/ Make it compatible with the main browsers
  6/ Create a min.css for better performances

  Thanks to 960grid, alsacreation and Hongkiat articles and tutorials that helped me a lot !!

 */
/* Variables definition */
/* Colors
  As I am color-blind I'm glad to use tools to respect good colors principal
  Here is a good article to find your theme colors : http://www.hongkiat.com/blog/best-color-tools-for-web-designers/
  I finally chose adobe color CC tool (older name was kuler adobe)
*/
/* Screen sizes for media queries */
/*
  I've been using the following website to get an idea of the different screen size
  I chose not to make any difference between portrait and landscape orientation. It will may be in a next version :)
  I've made the difference between 3 screen sizes, consider this as mobile, tablet and laptop
*/
/* Building the grid system
  I've followed mambows advices : https://github.com/mambows/simple-compass-css (OpenSource repo)
*/
/* Building responsive the grid system */
@media screen and (min-width: 1281px) {
  .col1 {
    width: 6%; }

  .col2 {
    width: 14.54545%; }

  .col3 {
    width: 23.09091%; }

  .col4 {
    width: 31.63636%; }

  .col5 {
    width: 40.18182%; }

  .col6 {
    width: 48.72727%; }

  .col7 {
    width: 57.27273%; }

  .col8 {
    width: 65.81818%; }

  .col9 {
    width: 74.36364%; }

  .col10 {
    width: 82.90909%; }

  .col11 {
    width: 91.45455%; }

  .col12 {
    width: 100%; } }
@media screen and (min-width: 760 px1) and (max-width: 1280px) {
  .col1 {
    width: 14.54545%; }

  .col2 {
    width: 31.63636%; }

  .col3 {
    width: 48.72727%; }

  .col4 {
    width: 65.81818%; }

  .col5 {
    width: 82.90909%; }

  .col6 {
    widows: 100%; }

  .col7 {
    widows: 100%; }

  .col8 {
    widows: 100%; }

  .col9 {
    widows: 100%; }

  .col10 {
    widows: 100%; }

  .col11 {
    widows: 100%; }

  .col12 {
    widows: 100%; } }
@media screen and (min-width: 421px) and (max-width: 760 px) {
  .col1 {
    widows: 50%; }

  .col2 {
    widows: 50%; }

  .col3 {
    widows: 100%; }

  .col4 {
    widows: 100%; }

  .col5 {
    widows: 100%; }

  .col6 {
    widows: 100%; }

  .col7 {
    widows: 100%; }

  .col8 {
    widows: 100%; }

  .col9 {
    widows: 100%; }

  .col10 {
    widows: 100%; }

  .col11 {
    widows: 100%; }

  .col12 {
    widows: 100%; } }
@media screen and (max-width: 420px) {
  .col1 {
    width: 100%; }

  .col2 {
    width: 100%; }

  .col3 {
    width: 100%; }

  .col4 {
    width: 100%; }

  .col5 {
    width: 100%; }

  .col6 {
    width: 100%; }

  .col7 {
    width: 100%; }

  .col8 {
    width: 100%; }

  .col9 {
    width: 100%; }

  .col10 {
    width: 100%; }

  .col11 {
    width: 100%; }

  .col12 {
    width: 100%; } }
/* Containers */
.grid-container {
  width: 100%;
  max-width: 1200px; }

/*-- clearfix -- */
.row:before,
.row:after {
  content: "";
  clear: both; }

/* However rows use the full width */
.row {
  width: 100%;
  margin: 0 auto;
  position: relative; }

/*
  Main elements
*/
/*
  Browser compatibility
  I've just found this tuto : http://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048
  which relates the elements compatibilities

  I may find some information on those websites : http://www.stefanwienert.de/blog/2012/05/18/easy-css-vendor-prefix-mixin-for-sass/
*/

/*# sourceMappingURL=skeleton.css.map */
