/* Building the grid system */
/*
  I've used the metaphor with the turtle shell which is pretty well organized with nice paddings between its blocks.
  That is why the columns are named "shells" !
*/
@import "settings";

//adding border-size mixin
@mixin box-sizing($type) {
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type;
}

//Clear everything before starting :)
*,
*:after,
*:before {
  margin: 0;
  padding: 0;
  /* Removes padding behaviour on widths, everything will stay into the row */
  @include box-sizing(border-box);
}

.row{
  margin: 0 auto;
  width: 100%;
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* General column attributes */
[class*='shell'] {
  float: left;
  padding: $gutter-width#{"%"};
  &:last-of-type{
    float: right;
    padding: $gutter-width#{"%"};
  }
}

/* Building the default grid system*/
@for $i from 1 through $columns {
  .shell#{$i} {
    width: 1% * ($column-width * $i) + ($gutter-width *($i - 1));
  }
}

/* Building grids for responsive layout */

@media screen and (max-width:$medium-screen-max-size) {
  .shell1,
  .shell3,
  .shell5,
  .shell7,
  .shell9,
  .shell11,
  {
    width: 50%;
  }
  .shell2,
  .shell4,
  .shell6,
  .shell8,
  .shell10,
  .shell12,
  {
    width: $full-width;
  }
}

@media screen and (max-width: $small-screen-max-size) {
  @for $i from 1 through $columns {
    .shell#{$i} {
      width: $full-width;
    }
  }
}
